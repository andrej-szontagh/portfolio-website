
@import url('https://fonts.googleapis.com/css?family=Montserrat:500,700,900');

// global SASS variables

// we need statically defined font sizes in pixels since we do a lot of
// static calculations like media query breakpoints that is dependent on the font size ..

$font-size-down:        16px;
$font-size-up:          20px;

$font-size-factor-down: 1.00;
$font-size-factor-up:   1.25;

:root {

    // GOLDEN RATIO : 1.61803398875

    // IDEA: make these static too ??

    --font-size-6:              17.94427rem;
    --font-size-5:              11.09016rem;
    --font-size-4:              6.854101rem;
    --font-size-3:              4.236067rem;
    --font-size-2:              2.618033rem;
    --font-size-1:              1.618033rem;
    --font-size-normal:         1.000000rem;

    --font-weight-normal:       500;
    --font-weight-bold:         700;
    --font-weight-black:        900;

    --font-height-normal:       0.7em;
    --font-height-bold:         0.7em;
    --font-height-black:        0.7em;

    font-family:                "Montserrat", sans-serif;
    font-weight:                var(--font-weight-normal);
    font-style:                 normal;

    // unfortunately there is no reliable way how to know how big is the pixel or any of the CSS units which are pretty
    // much just relative values that depends on outside factors that are not under our control

    // centimeter measurements are useless ..
    // https://stackoverflow.com/questions/20298221/using-cm-in-responsive-media-queries

    // .. so I decided to go with the flow and do what everybody else does and use this simple approach
    // crossed fingers and hope it will work just fine

    // we specify the smallest text size here as a base to ensure readability on all devices ..

    // https://adamwathan.me/dont-use-em-for-media-queries/
    // "The short answer is set an explicit root font size in pixels."

    // text breakpoint .. this is a major breakpoint for the whole UI
    @include media ("width<text")   { font-size: $font-size-down;   }
    @include media ("width>=text")  { font-size: $font-size-up;     }

    text-transform:             none;
    text-decoration:            none;
    text-rendering:             geometricPrecision;

    line-height:                1.6em;

    letter-spacing:             normal;

    -webkit-font-smoothing:     subpixel-antialiased;

    -webkit-text-size-adjust:   100%;
        -ms-text-size-adjust:   100%;
            text-size-adjust:   100%;
}

// basic link overrides
a:link      { color: inherit; text-decoration: none; }
a:visited   { color: inherit; text-decoration: none; }
a:hover     { color: inherit; text-decoration: none; }
a:active    { color: inherit; text-decoration: none; }
